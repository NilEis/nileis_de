---
import MainContent from "../../components/MainContent.astro";
import TitleAndMeta from "../../components/TitleAndMeta.astro";
---

<TitleAndMeta title="Reversi" />
<MainContent>
  <div class="flex justify-center items-center w-screen h-screen p-4">
    <div
      class="w-3/4 sm:w-1/2 md:w-2/5 lg:w-1/3 max-w-xs sm:max-w-sm md:max-w-md aspect-square"
    >
      <div class="grid grid-cols-8 gap-0 w-full h-full" id="reversi_grid">
        {
          Array.from({ length: 64 }, (_, i) => (
            <div
              class="flex items-center justify-center border-2 border-black bg-[#008d65] text-gray-800 font-bold text-lg m-0 p-0"
              id={`cell_${i}`}
            >
              <div
                id={`cell_piece_${i}`}
                class="w-full h-full rounded-[50%] bg-transparent transition-colors"
              />
            </div>
          ))
        }
      </div>
    </div>
  </div>
</MainContent>

<script>
  enum Piece {
    BLACK,
    WHITE,
    NONE,
  }

  const board = new Array(64);
  for (let index = 0; index < 64; index++) {
    board[index] = {
      piece: Piece.NONE,
      elem: document.getElementById(`cell_piece_${index}`) as HTMLDivElement,
    };
  }
  init();

  function init() {
    for (const c of board) {
      c.piece = Piece.NONE;
    }
    board[27].piece = Piece.WHITE;
    board[28].piece = Piece.BLACK;
    board[35].piece = Piece.BLACK;
    board[36].piece = Piece.WHITE;
    initCallbacks();
    updateBoard();
  }

  function updateBoard() {
    for (const c of board) {
      switch (c.piece) {
        case Piece.BLACK:
          c.elem.style.backgroundColor = "black";
          break;
        case Piece.WHITE:
          c.elem.style.backgroundColor = "white";
          break;
        case Piece.NONE:
          c.elem.style.backgroundColor = "transparent";
          break;
      }
    }
  }

  function initCallbacks() {
    const grid = document.getElementById("reversi_grid") as HTMLDivElement;
    grid.childNodes.forEach((cell, index) => {
      index -= 1;
      const piece = document.getElementById(
        `cell_piece_${index}`
      ) as HTMLDivElement;
      (cell as HTMLDivElement).onclick = () => {};
    });
  }
</script>
